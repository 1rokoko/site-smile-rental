const { chromium } = require('playwright');

(async () => {
  console.log('üñºÔ∏è –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –ù–ê –ü–†–û–î–ê–ö–®–ù –°–ê–ô–¢–ï');
  console.log('='.repeat(60));
  
  const browser = await chromium.launch();
  const page = await browser.newPage();
  
  // –°–æ–±–∏—Ä–∞–µ–º –æ—à–∏–±–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const imageErrors = [];
  const imageRequests = [];
  
  page.on('response', response => {
    const url = response.url();
    if (url.includes('/images/') || url.includes('/_next/image')) {
      imageRequests.push({
        url: url,
        status: response.status(),
        ok: response.ok()
      });
      
      if (!response.ok()) {
        imageErrors.push({
          url: url,
          status: response.status(),
          statusText: response.statusText()
        });
      }
    }
  });
  
  try {
    console.log('üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ https://smilerentalphuket.com...');
    await page.goto('https://smilerentalphuket.com', { 
      waitUntil: 'networkidle', 
      timeout: 25000 
    });
    
    const title = await page.title();
    console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫:', title);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const images = await page.$$eval('img', imgs => 
      imgs.map(img => ({
        src: img.src,
        alt: img.alt || 'no alt',
        naturalWidth: img.naturalWidth,
        naturalHeight: img.naturalHeight,
        complete: img.complete,
        loading: img.loading || 'eager'
      }))
    );
    
    console.log('\nüñºÔ∏è –ê–ù–ê–õ–ò–ó –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô (' + images.length + ' –Ω–∞–π–¥–µ–Ω–æ):');
    images.forEach((img, index) => {
      const status = img.complete && img.naturalWidth > 0 ? '‚úÖ' : '‚ùå';
      console.log(`  ${index + 1}. ${status} ${img.src}`);
      console.log(`     Alt: "${img.alt}", –†–∞–∑–º–µ—Ä: ${img.naturalWidth}x${img.naturalHeight}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫—É—Ç–µ—Ä–æ–≤
    const scooterImages = images.filter(img => 
      img.alt.toLowerCase().includes('scooter') || 
      img.src.includes('/scooters/') ||
      img.alt.toLowerCase().includes('nmax') ||
      img.alt.toLowerCase().includes('filano') ||
      img.alt.toLowerCase().includes('gpx')
    );
    
    console.log('\nüõµ –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø –°–ö–£–¢–ï–†–û–í (' + scooterImages.length + '):');
    scooterImages.forEach((img, index) => {
      const status = img.complete && img.naturalWidth > 0 ? '‚úÖ –ó–ê–ì–†–£–ñ–ï–ù–û' : '‚ùå –ù–ï –ó–ê–ì–†–£–ñ–ï–ù–û';
      console.log(`  ${index + 1}. ${status}`);
      console.log(`     URL: ${img.src}`);
      console.log(`     Alt: "${img.alt}"`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Trustpilot –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const trustpilotImages = images.filter(img => 
      img.alt.toLowerCase().includes('trustpilot') || 
      img.src.includes('trustpilot')
    );
    
    console.log('\n‚≠ê TRUSTPILOT –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø (' + trustpilotImages.length + '):');
    trustpilotImages.forEach((img, index) => {
      const status = img.complete && img.naturalWidth > 0 ? '‚úÖ –ó–ê–ì–†–£–ñ–ï–ù–û' : '‚ùå –ù–ï –ó–ê–ì–†–£–ñ–ï–ù–û';
      console.log(`  ${index + 1}. ${status}`);
      console.log(`     URL: ${img.src}`);
      console.log(`     Alt: "${img.alt}"`);
    });
    
    // –ê–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    console.log('\nüì° –ó–ê–ü–†–û–°–´ –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô (' + imageRequests.length + '):');
    imageRequests.forEach((req, index) => {
      const status = req.ok ? '‚úÖ' : '‚ùå';
      console.log(`  ${index + 1}. ${status} ${req.status} ${req.url}`);
    });
    
    // –û—à–∏–±–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    if (imageErrors.length > 0) {
      console.log('\n‚ùå –û–®–ò–ë–ö–ò –ó–ê–ì–†–£–ó–ö–ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô (' + imageErrors.length + '):');
      imageErrors.forEach((error, index) => {
        console.log(`  ${index + 1}. ${error.status} ${error.url}`);
      });
    }
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    await page.screenshot({ 
      path: 'production-images-diagnosis.png', 
      fullPage: true 
    });
    console.log('\nüì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: production-images-diagnosis.png');
    
    // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const workingImages = images.filter(img => img.complete && img.naturalWidth > 0).length;
    const brokenImages = images.length - workingImages;
    
    console.log('\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
    console.log('  - –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', images.length);
    console.log('  - –†–∞–±–æ—Ç–∞—é—â–∏—Ö:', workingImages);
    console.log('  - –°–ª–æ–º–∞–Ω–Ω—ã—Ö:', brokenImages);
    console.log('  - –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–∫—É—Ç–µ—Ä–æ–≤:', scooterImages.length);
    console.log('  - Trustpilot –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', trustpilotImages.length);
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error.message);
  }
  
  await browser.close();
  
  console.log('\n' + '='.repeat(60));
  console.log('üèÅ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –ó–ê–í–ï–†–®–ï–ù–ê');
})().catch(console.error);
