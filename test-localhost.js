const { chromium } = require('playwright');

(async () => {
  console.log('üîç –ü–†–û–í–ï–†–ö–ê –õ–û–ö–ê–õ–¨–ù–û–ì–û –°–ï–†–í–ï–†–ê');
  console.log('='.repeat(40));
  
  const browser = await chromium.launch();
  const page = await browser.newPage();
  
  try {
    console.log('üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ http://localhost:3000...');
    await page.goto('http://localhost:3000', { 
      waitUntil: 'domcontentloaded', 
      timeout: 10000 
    });
    
    const title = await page.title();
    const bodyText = await page.textContent('body');
    const visibleText = bodyText.replace(/\s+/g, ' ').trim();
    
    console.log('‚úÖ –õ–û–ö–ê–õ–¨–ù–´–ô –°–ï–†–í–ï–† –†–ê–ë–û–¢–ê–ï–¢!');
    console.log('üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫:', title);
    console.log('üìù –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞:', visibleText.length, '—Å–∏–º–≤–æ–ª–æ–≤');
    console.log('üìÑ –ü–µ—Ä–≤—ã–µ 150 —Å–∏–º–≤–æ–ª–æ–≤:', visibleText.substring(0, 150));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    const hasScooters = await page.locator('img[alt*="scooter"]').count();
    const hasSocial = await page.locator('a[href*="whatsapp"]').count();
    const hasHeadings = await page.locator('h1').count();
    
    console.log('üõµ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫—É—Ç–µ—Ä–æ–≤:', hasScooters);
    console.log('üì± –ö–Ω–æ–ø–∫–∏ —Å–æ—Ü. —Å–µ—Ç–µ–π:', hasSocial);
    console.log('üì∞ –ó–∞–≥–æ–ª–æ–≤–∫–∏ H1:', hasHeadings);
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
    await page.screenshot({ 
      path: 'localhost-working-confirmed.png', 
      fullPage: true 
    });
    console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞: localhost-working-confirmed.png');
    
    console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢:');
    console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä: –†–ê–ë–û–¢–ê–ï–¢');
    console.log('üîó URL: http://localhost:3000');
    console.log('üìä –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:', visibleText.length > 1000 ? '–ü–û–õ–ù–ê–Ø' : '–ë–ê–ó–û–í–ê–Ø');
    
  } catch (error) {
    console.log('‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
    console.log('üîß –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä...');
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞ –ø–æ—Ä—Ç—É 3000
    const { execSync } = require('child_process');
    try {
      const result = execSync('netstat -ano | findstr :3000', { encoding: 'utf8' });
      console.log('üîç –ü—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 3000:');
      console.log(result);
    } catch (e) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 3000');
    }
  }
  
  await browser.close();
})().catch(console.error);
