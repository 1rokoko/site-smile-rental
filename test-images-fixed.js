const { chromium } = require('playwright');

(async () => {
  console.log('üñºÔ∏è –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–• –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô');
  console.log('='.repeat(60));
  
  const browser = await chromium.launch();
  const page = await browser.newPage();
  
  try {
    console.log('üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ https://smilerentalphuket.com...');
    await page.goto('https://smilerentalphuket.com', { 
      waitUntil: 'domcontentloaded', 
      timeout: 30000 
    });
    
    const title = await page.title();
    console.log('‚úÖ –°–∞–π—Ç –∑–∞–≥—Ä—É–∂–µ–Ω:', title);
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    await page.waitForTimeout(5000);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const images = await page.$$eval('img', imgs => 
      imgs.map(img => ({
        src: img.src,
        alt: img.alt || 'no alt',
        naturalWidth: img.naturalWidth,
        naturalHeight: img.naturalHeight,
        complete: img.complete,
        tagName: img.tagName,
        className: img.className
      }))
    );
    
    console.log('\nüñºÔ∏è –ê–ù–ê–õ–ò–ó –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô (' + images.length + ' –Ω–∞–π–¥–µ–Ω–æ):');
    
    let workingImages = 0;
    let brokenImages = 0;
    
    images.forEach((img, index) => {
      const isWorking = img.complete && img.naturalWidth > 0;
      const status = isWorking ? '‚úÖ' : '‚ùå';
      
      if (isWorking) workingImages++;
      else brokenImages++;
      
      console.log(`  ${index + 1}. ${status} ${img.src}`);
      console.log(`     Alt: "${img.alt}", –†–∞–∑–º–µ—Ä: ${img.naturalWidth}x${img.naturalHeight}`);
      console.log(`     –¢–µ–≥: ${img.tagName}, –ö–ª–∞—Å—Å: ${img.className}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫—É—Ç–µ—Ä–æ–≤
    const scooterImages = images.filter(img => 
      img.alt.toLowerCase().includes('scooter') || 
      img.src.includes('/scooters/') ||
      img.alt.toLowerCase().includes('nmax') ||
      img.alt.toLowerCase().includes('filano') ||
      img.alt.toLowerCase().includes('gpx')
    );
    
    console.log('\nüõµ –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø –°–ö–£–¢–ï–†–û–í (' + scooterImages.length + '):');
    scooterImages.forEach((img, index) => {
      const isWorking = img.complete && img.naturalWidth > 0;
      const status = isWorking ? '‚úÖ –†–ê–ë–û–¢–ê–ï–¢' : '‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢';
      console.log(`  ${index + 1}. ${status}`);
      console.log(`     URL: ${img.src}`);
      console.log(`     Alt: "${img.alt}"`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
    console.log('\nüîó –ü–†–û–í–ï–†–ö–ê –ü–†–Ø–ú–û–ì–û –î–û–°–¢–£–ü–ê –ö –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø–ú:');
    const testImages = [
      '/images/scooters/nmax.jpg',
      '/images/scooters/filano.jpg',
      '/images/scooters/gpx150.jpg',
      '/images/trustpilot-reviews.png'
    ];
    
    for (const imagePath of testImages) {
      try {
        const response = await page.goto(`https://smilerentalphuket.com${imagePath}`, { timeout: 10000 });
        const status = response.status();
        console.log(`  ${status === 200 ? '‚úÖ' : '‚ùå'} ${imagePath} - HTTP ${status}`);
      } catch (error) {
        console.log(`  ‚ùå ${imagePath} - –û—à–∏–±–∫–∞: ${error.message}`);
      }
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await page.goto('https://smilerentalphuket.com', { waitUntil: 'domcontentloaded' });
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –∑–∞–¥–∞—á–∏ 2
    await page.screenshot({ 
      path: 'production-images-restored.png', 
      fullPage: true 
    });
    console.log('\nüì∏ –°–ö–†–ò–ù–®–û–¢ –°–û–ó–î–ê–ù: production-images-restored.png');
    
    // –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –ó–ê–î–ê–ß–ò 2:');
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:');
    console.log('  - –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', images.length);
    console.log('  - –†–∞–±–æ—Ç–∞—é—â–∏—Ö:', workingImages);
    console.log('  - –°–ª–æ–º–∞–Ω–Ω—ã—Ö:', brokenImages);
    console.log('  - –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–∫—É—Ç–µ—Ä–æ–≤:', scooterImages.length);
    
    const successRate = Math.round((workingImages / images.length) * 100);
    console.log('üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞:', successRate + '%');
    
    if (workingImages > 0) {
      console.log('üéâ –ó–ê–î–ê–ß–ê 2 –ß–ê–°–¢–ò–ß–ù–û –í–´–ü–û–õ–ù–ï–ù–ê!');
      console.log('‚úÖ –°–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log('‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ–∑–¥–∞–Ω');
      if (workingImages === images.length) {
        console.log('üéâ –í–°–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–´!');
      } else {
        console.log('‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç');
      }
    } else {
      console.log('‚ö†Ô∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç, –Ω–æ —Å–∞–π—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω');
    }
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
  
  await browser.close();
  
  console.log('\n' + '='.repeat(60));
  console.log('üèÅ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –ó–ê–í–ï–†–®–ï–ù–û');
})().catch(console.error);
