const { chromium } = require('playwright');

(async () => {
  console.log('üîç –ì–õ–£–ë–û–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–î–ê–ö–®–ù –°–ê–ô–¢–ê');
  console.log('='.repeat(60));
  
  const browser = await chromium.launch();
  const page = await browser.newPage();
  
  // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –æ—à–∏–±–∫–∏
  const consoleErrors = [];
  const failedRequests = [];
  
  page.on('console', msg => {
    if (msg.type() === 'error') {
      consoleErrors.push(msg.text());
    }
  });
  
  page.on('response', response => {
    if (!response.ok()) {
      failedRequests.push({
        url: response.url(),
        status: response.status(),
        statusText: response.statusText()
      });
    }
  });
  
  try {
    console.log('üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ https://smilerentalphuket.com...');
    await page.goto('https://smilerentalphuket.com', { 
      waitUntil: 'networkidle', 
      timeout: 20000 
    });
    
    // –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    const title = await page.title();
    const url = page.url();
    console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫:', title);
    console.log('üîó URL:', url);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É CSS
    const cssLinks = await page.$$eval('link[rel="stylesheet"]', links => 
      links.map(link => link.href)
    );
    console.log('\nüé® CSS —Ñ–∞–π–ª—ã (' + cssLinks.length + '):');
    cssLinks.forEach(css => console.log('  -', css));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É JS
    const jsScripts = await page.$$eval('script[src]', scripts => 
      scripts.map(script => script.src)
    );
    console.log('\n‚ö° JavaScript —Ñ–∞–π–ª—ã (' + jsScripts.length + '):');
    jsScripts.forEach(js => console.log('  -', js));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const images = await page.$$eval('img', imgs => 
      imgs.map(img => ({ src: img.src, alt: img.alt || 'no alt' }))
    );
    console.log('\nüñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (' + images.length + '):');
    images.slice(0, 5).forEach(img => console.log('  -', img.src, '(' + img.alt + ')'));
    if (images.length > 5) console.log('  ... –∏ –µ—â–µ', images.length - 5, '–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const bodyText = await page.textContent('body');
    const visibleText = bodyText.replace(/\s+/g, ' ').trim();
    console.log('\nüìù –î–ª–∏–Ω–∞ –≤–∏–¥–∏–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞:', visibleText.length, '—Å–∏–º–≤–æ–ª–æ–≤');
    console.log('üìÑ –ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤:');
    console.log('"' + visibleText.substring(0, 200) + '..."');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π
    const socialButtons = await page.$$eval('a[href*="telegram"], a[href*="whatsapp"], a[href*="instagram"], a[href*="facebook"]', 
      links => links.map(link => ({ href: link.href, text: link.textContent.trim() }))
    );
    console.log('\nüì± –ö–Ω–æ–ø–∫–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π (' + socialButtons.length + '):');
    socialButtons.forEach(btn => console.log('  -', btn.href, '"' + btn.text + '"'));
    
    // –û—à–∏–±–∫–∏ –∫–æ–Ω—Å–æ–ª–∏
    if (consoleErrors.length > 0) {
      console.log('\n‚ùå –û–®–ò–ë–ö–ò –ö–û–ù–°–û–õ–ò (' + consoleErrors.length + '):');
      consoleErrors.slice(0, 10).forEach(error => console.log('  -', error));
    }
    
    // –ù–µ—É–¥–∞—á–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    if (failedRequests.length > 0) {
      console.log('\nüö´ –ù–ï–£–î–ê–ß–ù–´–ï –ó–ê–ü–†–û–°–´ (' + failedRequests.length + '):');
      failedRequests.slice(0, 10).forEach(req => 
        console.log('  -', req.status, req.url)
      );
    }
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    await page.screenshot({ 
      path: 'diagnosis-full-page.png', 
      fullPage: true 
    });
    console.log('\nüì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: diagnosis-full-page.png');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∏–ª–∏
    const hasStyles = await page.evaluate(() => {
      const body = document.body;
      const computedStyle = window.getComputedStyle(body);
      return {
        backgroundColor: computedStyle.backgroundColor,
        fontSize: computedStyle.fontSize,
        fontFamily: computedStyle.fontFamily
      };
    });
    console.log('\nüé® –ü—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏:');
    console.log('  - –§–æ–Ω:', hasStyles.backgroundColor);
    console.log('  - –®—Ä–∏—Ñ—Ç:', hasStyles.fontSize, hasStyles.fontFamily);
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error.message);
  }
  
  await browser.close();
  
  console.log('\n' + '='.repeat(60));
  console.log('üèÅ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê');
})().catch(console.error);
