const fs = require('fs');
const path = require('path');
const sharp = require('sharp');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∂–∞—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
async function compressImage(inputPath, quality = 80) {
  try {
    const stats = fs.statSync(inputPath);
    const originalSize = stats.size;

    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    const tempPath = inputPath + '.temp';

    await sharp(inputPath)
      .jpeg({ quality: quality, progressive: true })
      .toFile(tempPath);

    // –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª —Å–∂–∞—Ç—ã–º —Ñ–∞–π–ª–æ–º
    fs.renameSync(tempPath, inputPath);

    const newStats = fs.statSync(inputPath);
    const newSize = newStats.size;
    const savings = originalSize - newSize;
    const savingsPercent = ((savings / originalSize) * 100).toFixed(1);

    console.log(`‚úÖ ${path.basename(inputPath)}: ${(originalSize/1024).toFixed(1)}KB ‚Üí ${(newSize/1024).toFixed(1)}KB (—ç–∫–æ–Ω–æ–º–∏—è: ${(savings/1024).toFixed(1)}KB, ${savingsPercent}%)`);

    return savings;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∂–∞—Ç–∏–∏ ${inputPath}:`, error.message);
    return 0;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–∫—É—Ç–µ—Ä–æ–≤
async function compressScooterImages() {
  const scootersDir = path.join(__dirname, 'public', 'images', 'scooters');
  
  if (!fs.existsSync(scootersDir)) {
    console.error('‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è public/images/scooters –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    return;
  }
  
  const files = fs.readdirSync(scootersDir);
  const imageFiles = files.filter(file => 
    file.endsWith('.jpg') && !file.includes('placeholder')
  );
  
  console.log(`üîß –ù–∞—á–∏–Ω–∞–µ–º —Å–∂–∞—Ç–∏–µ ${imageFiles.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–∫—É—Ç–µ—Ä–æ–≤...`);
  console.log('='.repeat(80));
  
  let totalSavings = 0;
  
  for (const file of imageFiles) {
    const inputPath = path.join(scootersDir, file);

    const savings = await compressImage(inputPath, 50); // –ö–∞—á–µ—Å—Ç–≤–æ 50% –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —ç–∫–æ–Ω–æ–º–∏–∏
    totalSavings += savings;
  }
  
  console.log('='.repeat(80));
  console.log(`üéâ –ì–û–¢–û–í–û! –û–±—â–∞—è —ç–∫–æ–Ω–æ–º–∏—è: ${(totalSavings/1024).toFixed(1)}KB`);
  console.log(`üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${imageFiles.length}`);
}

// –ó–∞–ø—É—Å–∫ —Å–∂–∞—Ç–∏—è
compressScooterImages().catch(console.error);
