const { chromium } = require('playwright');

async function testSites() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∞–π—Ç–æ–≤...\n');
  
  const browser = await chromium.launch();
  const page = await browser.newPage();
  
  // –¢–µ—Å—Ç 1: –ü—Ä–æ–¥–∞–∫—à–Ω —Å–∞–π—Ç
  console.log('üì° –¢–ï–°–¢ 1: –ü—Ä–æ–¥–∞–∫—à–Ω —Å–∞–π—Ç https://smilerentalphuket.com');
  try {
    await page.goto('https://smilerentalphuket.com', { 
      waitUntil: 'domcontentloaded', 
      timeout: 15000 
    });
    
    const title = await page.title();
    const bodyText = await page.textContent('body');
    
    console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫:', title);
    console.log('üîí SSL:', page.url().startsWith('https://') ? 'SECURE' : 'NOT SECURE');
    
    if (bodyText.includes('Website is updating')) {
      console.log('‚ö†Ô∏è –°—Ç–∞—Ç—É—Å: –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
    } else if (bodyText.includes('Smile Rental')) {
      console.log('üéâ –°—Ç–∞—Ç—É—Å: –°–ê–ô–¢ –†–ê–ë–û–¢–ê–ï–¢!');
    } else {
      console.log('‚ùì –°—Ç–∞—Ç—É—Å: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ');
    }
    
    // –°–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–æ–¥–∞–∫—à–Ω —Å–∞–π—Ç–∞
    await page.screenshot({ path: 'production-site-test.png', fullPage: true });
    console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: production-site-test.png');
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–∞–π—Ç–∞:', error.message);
  }
  
  console.log('\n' + '='.repeat(50) + '\n');
  
  // –¢–µ—Å—Ç 2: –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–∞–π—Ç (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω)
  console.log('üè† –¢–ï–°–¢ 2: –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–∞–π—Ç http://localhost:3000');
  try {
    await page.goto('http://localhost:3000', { 
      waitUntil: 'domcontentloaded', 
      timeout: 10000 
    });
    
    const title = await page.title();
    console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫:', title);
    console.log('üéâ –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –†–ê–ë–û–¢–ê–ï–¢!');
    
    // –°–∫—Ä–∏–Ω—à–æ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞
    await page.screenshot({ path: 'local-site-test.png', fullPage: true });
    console.log('üì∏ –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: local-site-test.png');
    
  } catch (error) {
    console.log('‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
    console.log('üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: npm run dev');
  }
  
  await browser.close();
  
  console.log('\nüèÅ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!');
  console.log('üìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è');
}

testSites().catch(console.error);
