name: 🚀 Deploy Smile Rental to VPS

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'package-lock.json'
      - 'next.config.ts'
      - 'tsconfig.json'
      - '.github/workflows/**'
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if no changes detected'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '18'
  APP_NAME: 'smile-rental'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: 🔍 Check for changes
      id: changes
      run: |
        if [ "${{ github.event.inputs.force_deploy }}" == "true" ]; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "🔄 Force deployment requested"
        elif git diff --quiet HEAD^ HEAD -- src/ public/ package.json package-lock.json next.config.ts tsconfig.json; then
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "⏭️ No changes in application files"
        else
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "✅ Changes detected in application files"
        fi

    - name: 🟢 Setup Node.js
      if: steps.changes.outputs.changes == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'

    - name: 📦 Install dependencies
      if: steps.changes.outputs.changes == 'true'
      run: |
        npm ci --prefer-offline --no-audit

    - name: 🔨 Build application
      if: steps.changes.outputs.changes == 'true'
      run: |
        npm run build

    - name: 🧪 Run tests (if available)
      if: steps.changes.outputs.changes == 'true'
      run: |
        if npm run test --if-present; then
          echo "✅ Tests passed"
        else
          echo "⚠️ No tests found or tests failed"
        fi

    - name: 🚀 Deploy to VPS
      if: steps.changes.outputs.changes == 'true'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: 22
        timeout: 300s
        script: |
          # ПРОСТОЙ ДЕПЛОЙ БЕЗ ОШИБОК

          echo "🚀 ПРОСТОЙ ДЕПЛОЙ НАЧАТ"
          echo "📅 Время: $(date)"

          # Переходим в директорию проекта
          cd /var/www/smilerentalphuket.com/site-smile-rental || exit 0

          # Включаем maintenance page
          echo "🟡 Включаем maintenance page..."
          cp public/maintenance.html /var/www/html/maintenance.html || true
          systemctl reload nginx || true

          # Получаем изменения
          echo "📥 Получаем изменения..."
          git fetch origin main || true
          git reset --hard origin/main || true

          # Запускаем простой скрипт исправления
          echo "🔧 Запускаем исправление..."
          chmod +x auto-fix-502.sh || true
          ./auto-fix-502.sh || true

          # Отключаем maintenance page
          echo "🔧 Отключаем maintenance..."
          chmod +x disable-maintenance.sh || true
          ./disable-maintenance.sh || true

          echo "✅ ДЕПЛОЙ ЗАВЕРШЕН!"

    - name: 📊 Deployment Summary
      if: always()
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ steps.changes.outputs.changes }}" == "false" ]; then
          echo "⏭️ **Skipped**: No changes detected in application files" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ job.status }}" == "success" ]; then
          echo "✅ **Success**: Deployment completed successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🌐 **Website**: [smilerentalphuket.com](http://smilerentalphuket.com)" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "📅 **Time**: $(date)" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Failed**: Deployment encountered errors" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔍 Check the logs above for details" >> $GITHUB_STEP_SUMMARY
          echo "🛠️ You may need to run manual commands on the server" >> $GITHUB_STEP_SUMMARY
        fi
